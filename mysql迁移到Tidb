1、首先搭建测试环境的TIDB，包括TICDC和DM工具（安装最新的LTS小版本8.5.1）
2、确定要迁移的模块，按模块进行迁移，先迁移一个非核心链路模块，迁移过程无问题后再迁移核心模块
3、将要迁移的模块的表结构在对应的TIDB库里面建立
4.1、使用DM工具对迁移模块的表进行全量和增量同步到TIDB对应库
4.2、迁移模块进行TIDB代码适配
5.1、检查验证DM迁移数据是否正常
5.2、验证程序是否适配TIDB正常
6、生产停服进行模块TIDB迁移
7、进行全过程复盘和总结，推广进行其他模块进行处理

注意事项：
1、主键不能自增长，会有热点问题，使用/*T![auto_rand] AUTO_RANDOM(8) */
2、表字段值不允许为空
2、视图能否迁移过去，还有存储过程，触发器
3、C端接口不要count分页，直接下一页下一页


TIDB建表注意事项：
1、主键不能自增长，会有热点问题，使用/*T![auto_rand] AUTO_RANDOM(8) */
2、表字段值不允许为空
3、数据库表字符集为 utf8mb4
4、对于大数据的表，建表增加PRE_SPLIT_REGIONS=4;提前分配(2^4) 个 Region


针对注单这样的大表
SHARD_ROW_ID_BITS = 5 PRE_SPLIT_REGIONS=4;只能用于AUTO_RANDOM
SHARD_ROW_ID_BITS = 5 表示 tidb_rowid 的值会随机分布成 32 (32=2^5) 个范围区间。
PRE_SPLIT_REGIONS=4 表示建完表后提前切分出 16 (2^4) 个 Region。
CREATE TABLE t_test(
paimary_id bingint(20) NOT NULL /*T![auto_rand] AUTO_RANDOM(8) */,
id bingint(20) NOT NULL,

PRIMARY KEY(paimary_id)/*T![clustered_index] CLUSTERED */,
UNIQUE KEY uk_id(id)
)ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_bin PRE_SPLIT_REGIONS=4;

https://docs.pingcap.com/zh/tidb/stable/dm-manage-source/
执行物理 DDL（包括添加索引或列类型变更）时，适当调整以下系统变量可以平衡 DDL 执行速度与对业务负载的影响：
tidb_ddl_reorg_worker_cnt：这个变量用来设置 DDL 操作 reorg worker 的数量，控制回填的并发度。
tidb_ddl_reorg_batch_size：这个变量用来设置 DDL 操作 re-organize 阶段的 batch size，以控制回填的数据量。
推荐值：
在无其他负载情况下，如需让 ADD INDEX 尽快完成，可以将 tidb_ddl_reorg_worker_cnt 和 tidb_ddl_reorg_batch_size 的值适当调大，例如将两个变量值分别调为 20 和 2048。
在有其他负载情况下，如需让 ADD INDEX 尽量不影响其他业务，可以将 tidb_ddl_reorg_worker_cnt 和 tidb_ddl_reorg_batch_size 适当调小，例如将两个变量值分别调为 4 和 256

迁移完成前
CREATE TABLE user (
  id BIGINT PRIMARY KEY,
  name VARCHAR(50)
);
迁移完成后
ALTER TABLE user MODIFY COLUMN id BIGINT PRIMARY KEY AUTO_RANDOM(5);

生产环境保持默认 OFF，迁移/特殊情况可临时设为 ON
SET GLOBAL allow_auto_random_explicit_insert = ON;

SHOW TABLE t_user_voucher REGIONS;

测试环境
TiDB：3 个节点，每个节点 8 核 64GB RAM。
TiKV：3 个节点，每个节点 8 核 64GB RAM，SSD 磁盘。
PD：3 个节点，每个节点 4 核 16GB RAM。

生产
TiDB：3 个节点，每个节点 32 核 256GB RAM。
TiKV：5 个节点，每个节点 32 核 256GB RAM，SSD 磁盘。
PD：3 个节点，每个节点 8 核 32GB RAM。

URL加密前后端，梳理使用注单表的场景然后看怎么优化
后续进行服务治理&资损监控
















增加拦截器，防止数据库全表扫描，导致服务和DB不可用。

1测试环境搭建TIDB和DM迁移工具    一周
2.1整理需要迁移模块的SQL建表语句到TIDB执行  三天
主要工作，先建立和原表一样名称的表，再建立AUTO_RANDOM的临时表，两个表结构一模一样；先把数据同步到原表，
SET GLOBAL allow_auto_random_explicit_insert = ON;
再使用insert into select 语句把迁移过来的原表数据插入到临时表，
再设置SET GLOBAL allow_auto_random_explicit_insert = OFF;
2.2迁移模块代码层面适配TIDB 三天
主要工作1、将源代码中的主键统一设置为数据库自动生成,@TableId(type = IdType.AUTO)
2、如果需要涉及插入后拿到主键的应用，通过对象可以拿到
2.3迁移模块测试用例编写 三天
3.1测试环境迁移模块迁移数据 两天
3.2生产搭建TIDB和DM迁移工具 一周
4测试验证测试环境迁移模块功能 一周
生产环境模块数据迁移&发布 一天
生产环境验证数据迁移 一天




























